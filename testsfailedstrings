copy the line to utop after use semantic and open Semantic:


test 3:
test "((lambda (x) 
        (if (x 1) 
            (x 2) 
            ((lambda (x) 
                (set! x 0))
                 3))) 
                 (lambda (x) x))";;
testlex "((lambda (x) (if (x 1)(x 2) ((lambda (x) (set! x 0))3))) (lambda (x) x))";;

test 4:
test "(lambda (x) 
(or ((lambda (y . z) 
        (lambda () 
        ((lambda () 
            (+ x z)))))
             x 1) 
             (lambda () (set! x w)) 
             (w w)))";;

testlex "(lambda (x)(or ((lambda (y . z) (lambda () ((lambda () (+ x z))))) x 1) (lambda () (set! x w)) (w w)))";;

test 6:
test "(lambda (x y z . w) begin z ((lambda () (begin (set! w w) ((y x))))))";;
testlex "(lambda (x y z . w) begin z ((lambda () (begin (set! w w) ((y x))))))";;

test 8:
test "(lambda (x y) (begin (x y) (lambda () (lambda () (lambda () (set! x ((lambda (z) (set! y x)) y)))))))";;
testlex "(lambda (x y) (begin (x y) (lambda () (lambda () (lambda () (set! x ((lambda (z) (set! y x)) y)))))))";;

test 9:
test "(lambda () (begin ((lambda () x)) ((lambda (x) (begin (set! x 1) (lambda () x))) 2) ((lambda x x) 3)))";;
testlex "(lambda () (begin ((lambda () x)) ((lambda (x) (begin (set! x 1) (lambda () x))) 2) ((lambda x x) 3)))";;

test 10:
test "(lambda (x y z) (begin (lambda (y) (begin (set! x 5) (+ x y))) (+ x y z)))";;
testlex "(lambda (x y z) (begin (lambda (y) (begin (set! x 5) (+ x y))) (+ x y z)))";;

test 11:
test "(lambda (x) (set! x ((lambda () x))))";;
testlex "(lambda (x) (set! x ((lambda () x))))";;

test 12:
test "(y (lambda (y) (begin (set! a (lambda (b) (a b))) (set! t (lambda (x) (begin (set! y (lambda (j) (x j x))) h))) (y a))))";;
testlex "(y (lambda (y) (begin (set! a (lambda (b) (a b))) (set! t (lambda (x) (begin (set! y (lambda (j) (x j x))) h))) (y a))))";;

test 14:
test "(lambda (x y) (begin (lambda () (set! x y)) (lambda () (set! y x))))";;
testlex "(lambda (x y) (begin (lambda () (set! x y)) (lambda () (set! y x))))";;

test 22:
test "(lambda (x) (begin x (lambda (x) (begin (set! x 1) (lambda () x))) (lambda () (set! x x))))";;
testlex "(lambda (x) (begin x (lambda (x) (begin (set! x 1) (lambda () x))) (lambda () (set! x x))))";;
